name: task - validate commit on master
on:
  push:
    branches: [ master ]

jobs:
  lint-staticChecks-test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup actions.
        uses: actions/checkout@v2


#      - name: validate commit format -- Check if HEAD commit message contains [xyz] or FAIL
#        uses: gsactions/commit-message-checker@v1
#        with:
#          excludeDescription: 'true'                # optional: this excludes the description body of a pull request
#          excludeTitle: 'true'                      # optional: this excludes the title of a pull request
#          pattern: '^\[[^]]+\].+'                   # this pattern will take all commits as input and check weather the head commit have one  [..] block
#          flags: 'g' # more discussion here : https://github.com/GsActions/commit-message-checker/discussions/61,
#          error: 'Your head commit must contain `[..]` like "[BUGFIX] or [SDK-974]".'
#          checkAllCommitMessages: 'true' # optional: this checks all commits associated with a pull request
#          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true
#          #pattern: '^[^#].{74}'     error: 'The maximum line length of 74 characters is exceeded.'
#          #pattern: '^.+(Resolves|Fixes): \#[0-9]+$' #  Check for Resolves / Fixes


      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Check lint
        run: ./gradlew lint

      - name: Upload Lint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lint_results
          path:  |
            app/build/reports/lint-results-debug.html
            dog_network/build/reports/lint-results-debug.html

      - name: CodeAnalysis via  detekt
        run: ./gradlew detekt

      - name: Upload detekt results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: detekt_results
          path:  |
            app/build/reports/detekt
            dog_network/build/reports/detekt

      - name: CodeAnalysis via  checkstyle
        run: ./gradlew checkstyle

      - name: Upload checkstyle results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle_results
          path: |
            app/build/reports/checkstyle
            dog_network/build/reports/checkstyle

      - name: Run Unit Tests And Code Coverage
        run: ./gradlew jacocoTestReportDebug

      - name: Upload Unit tests
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-results.zip
          path: |
            app/build/reports/tests
            app/build/reports/jacoco

            dog_network/build/reports/tests
            dog_network/build/reports/jacoco

      - name: Generate AAR and APK files
        run: ./gradlew assembleDebug

      - name: Upload AAR files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-results.zip
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            dog_network/build/outputs/aar

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#4ddbff",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "❇️GitHub Action build results❇️",
                        "emoji": true
                      }
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Action ran for following    <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|PR or HEAD_COMMIT>"
                      }
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Job Status:*  *${{ job.status }}*"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Run id:* \n ${{github.run_id }} "
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Server URL:* \n ${{ github.server_url }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Repository:* \n ${{ github.repository }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Full URL: *\n ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Head Ref:* \n ${{ github.head_ref}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Base Ref:* \n ${{ github.base_ref}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Pull Request Number:* \n ${{ github.event.pull_request.number }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*PR URL:* \n ${{ github.event.pull_request.html_url }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*HEAD Commit URL:* \n ${{ github.event.head_commit.url }}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }

        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Send success message to Slack
        if: ${{ inputs.deploy-job-status == 'success' }}
        id: slack-success
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"Se realizó el despliegue del front-end en el ambiente de *${{ inputs.env-name }}*"}},{"type":"section","text":{"type":"mrkdwn","text":"${{ inputs.url }}"}}]}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Send failure message to Slack
        if: ${{ inputs.deploy-job-status == 'failure' }}
        id: slack-failure
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"El despliegue del front-end en el ambiente de *${{ inputs.env-name }}* tuvo errores"}}]}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Send cancelled message to Slack
        if: ${{ inputs.deploy-job-status == 'cancelled' }}
        id: slack-cancelled
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"El despliegue del front-end en el ambiente de *${{ inputs.env-name }}* fue cancelado"}}]}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
