name: task - validate commit on master
on:
  push:
    branches: [ master, master_java ]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11.
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Check lint via marketplace gradle action (similar to gradle command `./gradlew lint`)
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: lint

      - name: Upload Lint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lint_results
          path:  |
            app/build/reports/lint-results-debug.html
            dog_network/build/reports/lint-results-debug.html


  code_analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: CodeAnalysis via  detekt
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: detekt

      - name: Upload detekt results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: detekt_results
          path:  |
           app/build/reports/detekt
           dog_network/build/reports/detekt


      - name: CodeAnalysis via  checkstyle
        if: always()
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: checkstyle

      - name: Upload checkstyle results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle_results
          path: |
            app/build/reports/checkstyle
            dog_network/build/reports/checkstyle


  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Run Tests ( marketplace gradle action similar to gradle command `./gradlew test`)
        if: always()
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: test

      - name: Upload Unit tests
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-results.zip
          path: |
            app/build/reports/tests
            dog_network/build/reports/tests

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Publish to MavenCentral
        if: ${{ contains(github.event.head_commit.message, '[UPLOAD]') }}
        run: ./gradlew publishToSonatype --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

  generate_apk:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Generate debug apk and library aars
        if: always()
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: assembleDebug

      - name: Upload APK via marketplace  action
        uses: actions/upload-artifact@v2
        with:
          name: aars_and_apk.zip
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            dog_network/build/outputs/aar



# build is unnecessary step here since it covers all of these steps + many additional steps

#  build:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Build code ( marketplace gradle action similar to gradle command `./gradlew build`)
#        uses: gradle/gradle-build-action@v2.1.3
#        with:
#          arguments: build
