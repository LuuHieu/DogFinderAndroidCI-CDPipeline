//apply plugin: 'jacoco'

//task codeCoverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
//    group = "Reporting"
//    description = "Generate Jacoco coverage reports after running tests."
//    reports {
//        xml.enabled = true
//        html.enabled = true
//        html.destination = file("$buildDir/reports/jacoco/codeCoverageReport/html/index.html")
//    }
////    classDirectories = fileTree(
////            dir: 'build/intermediates/classes/staging/debug/com/yourpackage',
////            excludes: androidExclusion
////    )
////    sourceDirectories = files('src/main/java/work/curioustools/dogfinder')
////    executionData = files('build/jacoco/testStagingDebugUnitTest.exec')
//}
//
//task getCoverage(type: Exec, dependsOn: 'codeCoverageReport') {
//    group = "Reporting"
//    commandLine "open", "$buildDir/reports/jacoco/codeCoverageReport/html/index.html"
//}


//
//def jacocoExcludes = [
//        'com/mylibrary/excludedpackage/**'
//]
//
//
//android.productFlavors.all { variant ->
//    task("test${variant.name.capitalize()}WithCoverage", type: JacocoReport, dependsOn: "test${variant.name.capitalize()}") {
//        group = 'verification'
//        description = "Run unit test for the ${variant.name} build with Jacoco code coverage reports."
//
//        classDirectories = fileTree(
//                dir: variant.javaCompile.destinationDir,
//                excludes: rootProject.ext.jacocoExcludes.plus(jacocoExcludes)
//        )
//        sourceDirectories = files(variant.javaCompile.source)
//        executionData = files("${buildDir}/jacoco/test${variant.name.capitalize()}.exec")
//
//        reports {
//            xml.enabled true
//            xml.destination "${buildDir}/reports/jacoco/${variant.name}/${variant.name}.xml"
//            html.destination "${buildDir}/reports/jacoco/${variant.name}/html"
//        }
//    }
//}