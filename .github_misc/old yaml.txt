name: run junit tests

#---------------------------------------------------------------------------------------------------------------------
on:
  workflow_dispatch:
#  push:
#    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Gradle lint
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: lint

      - name: Gradle test
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: test

      - name: Gradle Build
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: build





name: build android code

#---------------------------------------------------------------------------------------------------------------------
on:
  workflow_dispatch:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

#---------------------------------------------------------------------------------------------------------------------
jobs:

  # JOB 1 BUILD THE CODE
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # [github runner action] do something with https://github.com/actions/checkout
      - uses: actions/checkout@v2

      # [github runner action] setup jdk
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
          #server-id: something
          #settings-path: ${{ github.workspace }}

      #[github runner action] build/test/other actions with gradle :https://github.com/marketplace/actions/gradle-build-action
      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: build


      # [host cli action] grant permissions(not required if asked for permissions beforehand)
      # - name: Grant execute permission for gradlew
      # run: chmod +x gradlew

      # [host cli action] run gradle build
#      - name: Build with Gradle
#        run: ./gradlew build

#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#
#      - name: Publish to GitHub Packages Apache Maven
#        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#        env:
#          GITHUB_TOKEN: ${{ github.token }}


# awesome : https://github.com/zhaobozhen/LibChecker/blob/master/.github/workflows/android.yml

#allows failing gradle if lints don't pass : https://github.com/yutailang0119/action-android-lint:

# how to upload android apk/logs https://andresand.medium.com/android-test-reporting-with-github-actions-876dbf6abeb0



name: android-master

on:
  push:
    branches:
      - 'master'

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Start Lint Check
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: lint

      - name: Upload Lint results
        uses: actions/upload-artifact@v2
        with:
          name: lint_results
          path: app/build/reports/lint-results-debug.html

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Start Unit Tests
        uses: gradle/gradle-build-action@v2.1.3
        with:
          arguments: test

      - name: Upload Unit tests results
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-results
          path: app/build/reports/tests/testDebugUnitTest/index.html

  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write


    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk


# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#
# Scans are triggered:
# 1. On every push to default and protected branches
# 2. On every Pull Request targeting the default branch
# 3. On a weekly schedule
# 4. Manually, on demand, via the "workflow_dispatch" event
#
# The workflow should work with no modifications, but you might like to use a
# later version of the Detekt CLI by modifing the $DETEKT_RELEASE_TAG
# environment variable.
name: Scan with Detekt

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    #https://crontab.guru/
    - cron: '26 10 * * 1'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Release tag associated with version of Detekt to be installed
  # SARIF support (required for this workflow) was introduced in Detekt v1.15.0
  DETEKT_RELEASE_TAG: v1.15.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scan"
  scan:
    name: Scan
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Gets the download URL associated with the $DETEKT_RELEASE_TAG
      - name: Get Detekt download URL
        id: detekt_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api graphql --field tagName=$DETEKT_RELEASE_TAG --raw-field query='
            query getReleaseAssetDownloadUrl($tagName: String!) {
              repository(name: "detekt", owner: "detekt") {
                release(tagName: $tagName) {
                  releaseAssets(name: "detekt", first: 1) {
                    nodes {
                      downloadUrl
                    }
                  }
                  tagCommit {
                    oid
                  }
                }
              }
            }
          ' 1> gh_response.json

          DETEKT_RELEASE_SHA=$(jq --raw-output '.data.repository.release.releaseAssets.tagCommit.oid' gh_response.json)
          if [ $DETEKT_RELEASE_SHA != "37f0a1d006977512f1f216506cd695039607c3e5" ]; then
            echo "Release tag doesn't match expected commit SHA"
            exit 1
          fi

          DETEKT_DOWNLOAD_URL=$(jq --raw-output '.data.repository.release.releaseAssets.nodes[0].downloadUrl' gh_response.json)
          echo "::set-output name=download_url::$DETEKT_DOWNLOAD_URL"

      # Sets up the detekt cli
      - name: Setup Detekt
        run: |
          dest=$( mktemp -d )
          curl --request GET \
            --url ${{ steps.detekt_info.outputs.download_url }} \
            --silent \
            --location \
            --output $dest/detekt
          chmod a+x $dest/detekt
          echo $dest >> $GITHUB_PATH

      # Performs static analysis using Detekt
      - name: Run Detekt
        continue-on-error: true
        run: |
          detekt --input ${{ github.workspace }} --report sarif:${{ github.workspace }}/detekt.sarif.json

      # Modifies the SARIF output produced by Detekt so that absolute URIs are relative
      # This is so we can easily map results onto their source files
      # This can be removed once relative URI support lands in Detekt: https://git.io/JLBbA
      - name: Make artifact location URIs relative
        continue-on-error: true
        run: |
          echo "$(
            jq \
              --arg github_workspace ${{ github.workspace }} \
              '. | ( .runs[].results[].locations[].physicalLocation.artifactLocation.uri |= if test($github_workspace) then .[($github_workspace | length | . + 1):] else . end )' \
              ${{ github.workspace }}/detekt.sarif.json
          )" > ${{ github.workspace }}/detekt.sarif.json

      # Uploads results to GitHub repository using the upload-sarif action
      - uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: ${{ github.workspace }}/detekt.sarif.json
          checkout_path: ${{ github.workspace }}




name: github publish
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
## This workflow uses actions that are not certified by GitHub. They are provided by a third-party and are governed by separate terms of service, privacy policy, and support documentation.
## This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
## For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle
#name: Gradle Package
#
#
#on:
#  release:
#    types: [created]
#
#
#
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v2
#
#
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
#        with:
#          arguments: build
#
#      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
#      # the publishing section of your build.gradle
#      - name: Publish to GitHub Packages
#        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
#        with:
#          arguments: publish
#        env:
#          USERNAME: ${{ github.actor }}
#          TOKEN: ${{ secrets.GITHUB_TOKEN }}




# https://github.com/trnl/github-release-gradle-plugin





name: maven publish.
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

## This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
## For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
#https://selectfrom.dev/using-github-actions-to-automatically-publish-gradle-build-artifacts-d71c915cfa4:
#name: Maven Package
#
##---------------------------------------------------------------------------------------------------------------------
#on:
#  release:
#    types: [ created ]
#
#
#
##---------------------------------------------------------------------------------------------------------------------
#jobs:
#
#
#  build:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#
#      - name: Publish to GitHub Packages Apache Maven
#        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#










